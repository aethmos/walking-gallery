{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["query","IndexPage","data","categories","imagesByCategory","totalImages","totalCount","sections","nodes","map","category","images","group","filter","edges","node","relativeDirectory","edge","length","image","thumbIdx","text","title","link","undefined","childImageSharp","fluid","src","showHomeButton","sensorActive","insideSection"],"mappings":"mMA2BaA,EAAK,aA+CHC,UArEG,SAAC,GAA4C,IAAD,IAA1CC,KAAOC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,iBAC7BC,EAAcF,EAAWG,WACzBC,EAAWJ,EAAWK,MAAMC,KAAI,SAAAC,GAClC,IAAIC,EAASP,EACRQ,MACAC,QAAO,SAAAD,GAAK,OAAIA,EAAME,MAAM,GAAGC,KAAKC,oBAAsBN,EAASM,qBAAmB,GACtFF,MACAL,KAAI,SAAAQ,GAAI,OAAIA,EAAKF,QAKtB,OAJAL,EAASL,YAAcM,EAAOO,OAC9BR,EAASS,MAAQR,EAAOD,EAASU,UACjCV,EAASW,KAAOX,EAASY,MACzBZ,EAASa,KAAT,IAAoBb,EAASM,kBAA7B,IACON,KACRG,QAAO,SAAAH,GAAQ,YAAuBc,IAAnBd,EAASS,SAE/B,OACI,kBAAC,IAAD,CAAQG,MAAUjB,EAAL,eAAgCc,MAAOZ,EAAS,GAAGY,MAAMM,gBAAgBC,MAAMC,IAAKC,gBAAgB,IAC5G,SAAAC,GAAY,OAAI,kBAAC,IAAD,CAAQtB,SAAUA,EAAUsB,aAAcA,EAAcC,eAAe","file":"component---src-pages-index-js-24dbb35409a305585553.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/layout';\r\nimport {graphql} from \"gatsby\";\r\nimport Slider from \"../components/Slider\";\r\n\r\nconst IndexPage = ({data: {categories, imagesByCategory}}) => {\r\n    const totalImages = categories.totalCount;\r\n    const sections = categories.nodes.map(category => {\r\n        let images = imagesByCategory\r\n            .group\r\n            .filter(group => group.edges[0].node.relativeDirectory === category.relativeDirectory)[0]\r\n            .edges\r\n            .map(edge => edge.node);\r\n        category.totalImages = images.length;\r\n        category.image = images[category.thumbIdx];\r\n        category.text = category.title;\r\n        category.link = `/${category.relativeDirectory}/`;\r\n        return category;\r\n    }).filter(category => category.image !== undefined);\r\n\r\n    return (\r\n        <Layout title={`${totalImages} Collections`} image={sections[0].image.childImageSharp.fluid.src} showHomeButton={false}>\r\n            {sensorActive => <Slider sections={sections} sensorActive={sensorActive} insideSection={false}/>}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const query = graphql`\r\n    query CategoriesAndImages{\r\n        categories: allCategoryJson(\r\n            sort : {\r\n                order: DESC,\r\n                fields: date\r\n            }\r\n        ) {\r\n            nodes {\r\n                id\r\n                title\r\n                relativeDirectory\r\n                date(fromNow: true)\r\n                thumbIdx\r\n            }\r\n            totalCount\r\n        }\r\n        imagesByCategory: allFile(\r\n            filter: {\r\n                extension: {regex: \"/jpg|png/\"}\r\n            }, sort: {\r\n                order: ASC,\r\n                fields: name\r\n            })\r\n        {\r\n            group(field: relativeDirectory) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name\r\n                        extension\r\n                        relativeDirectory\r\n                        childImageSharp {\r\n                            fluid(maxHeight: 1920, quality: 75, cropFocus: ATTENTION) {\r\n                                aspectRatio\r\n                                sizes\r\n                                src\r\n                                srcSet\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}