{"version":3,"sources":["webpack:///./src/components/AlbumTemplate.js"],"names":["query","AlbumTemplate","data","category","images","edges","map","edge","image","node","link","totalImages","length","settings","initialSlide","thumbIdx","title","childImageSharp","fluid","src","index","to","key","id","className","styles","slide","undefined","descriptionPanel"],"mappings":"2PAoCaA,EAAK,YAsCHC,UAnEO,SAAC,GAAgC,IAAD,IAA9BC,KAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACrCA,EAASA,EAAOC,MAAMC,KAAI,SAAAC,GACtB,IAAIC,EAAQD,EAAKE,KAGjB,OAFAD,EAAML,SAAWA,EACjBK,EAAME,KAAO,IACNF,KAEXL,EAASQ,YAAcP,EAAOQ,OAE9B,IAAMC,EAAW,CACfC,aAAcX,EAASY,UAEzB,OACI,kBAAC,IAAD,CAAQC,MAAOb,EAASa,MAAOR,MAAOJ,EAAOD,EAASY,UAAUE,gBAAgBC,MAAMC,KAClF,kBAAC,IAAD,CAAQN,SAAUA,GAAYT,EAAOE,KAAI,SAACE,EAAOY,GAAR,aACrC,kBAAC,OAAD,CAAMC,GAAIb,EAAME,KAAOF,EAAME,KAAO,KAChC,kBAAC,IAAD,CAAiBY,IAAKd,EAAMe,GAAIC,UAAWC,IAAOC,MAAOR,MAAOV,EAAMS,gBAAgBC,YACtDS,KAA1B,UAAAnB,EAAML,gBAAN,eAAgBa,OAAsB,KACpC,yBAAKQ,UAAWC,IAAOG,kBACnB,4BAAKR,EAAQ,EAAb,MAAmBZ,EAAML,SAASQ","file":"component---src-components-album-template-js-2b696a6f693bcf93b3ce.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/layout';\r\nimport {graphql, Link} from \"gatsby\";\r\nimport styles from \"./Carousel.module.scss\";\r\nimport Slider from \"../components/LoadableSlider\";\r\nimport BackgroundImage from \"gatsby-background-image\";\r\n\r\nconst AlbumTemplate = ({data: {category, images}}) => {\r\n    images = images.edges.map(edge => {\r\n        let image = edge.node;\r\n        image.category = category;\r\n        image.link = '/';\r\n        return image;\r\n    });\r\n    category.totalImages = images.length;\r\n\r\n    const settings = {\r\n      initialSlide: category.thumbIdx\r\n    };\r\n    return (\r\n        <Layout title={category.title} image={images[category.thumbIdx].childImageSharp.fluid.src}>\r\n            <Slider settings={settings}>{ images.map((image, index) => (\r\n                <Link to={image.link ? image.link : '#'}>\r\n                    <BackgroundImage key={image.id} className={styles.slide} fluid={image.childImageSharp.fluid}>\r\n                        { image.category?.title === undefined ? null : (\r\n                            <div className={styles.descriptionPanel}>\r\n                                <h3>{index + 1} / {image.category.totalImages}</h3>\r\n                            </div>\r\n                        ) }\r\n                    </BackgroundImage>\r\n                </Link>\r\n            )) }</Slider>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const query = graphql`\r\n            query CategoryAndImages($categoryId: String, $path: String) {\r\n                category: categoryJson(id: { eq: $categoryId}) {\r\n                    id\r\n                    title\r\n                    relativeDirectory\r\n                    date(fromNow: true)\r\n                    thumbIdx\r\n                }\r\n                images: allFile(\r\n                filter: {\r\n                    extension: {regex: \"/jpg|png/\"}, \r\n                    relativeDirectory: {eq: $path}\r\n                }, sort: {\r\n                    order: ASC, \r\n                    fields: name\r\n                })\r\n                {\r\n                    edges {\r\n                        node {\r\n                            id\r\n                            name\r\n                            extension\r\n                            relativeDirectory\r\n                            childImageSharp {\r\n                                fluid(maxHeight: 1920, quality: 75, cropFocus: ATTENTION) {\r\n                                    aspectRatio\r\n                                    sizes\r\n                                    src\r\n                                    srcSet\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n\r\nexport default AlbumTemplate;\r\n"],"sourceRoot":""}